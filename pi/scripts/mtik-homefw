#!/bin/bash

# Created for MikroTik routers has existing firewall facility.
# Aim is to form permanent block list for scanning farms that
# have known PTR records.
#                                               Che, July 2018

# Create ssh key pair for your router and use
# those credentials for logging in
#BASH_XTRACEFD=2
target_ip="192.168.11.254" #24.135.105.114,62.193.139.170
router_ssh="ssh robot@$target_ip -p 22"

log_dir="/home/$(id -un)/scripts/homefw"
log_file="$log_dir/$(date +%Y-%m)_bad_hosts.log"
log_file_empty="$log_dir/$(date +%Y-%m)_no_ptr.log"
log_file_other="$log_dir/$(date +%Y-%m)_other_hosts.log"

# Address lists on the remote MikroTik
router_list_1="vpn_stage1"
router_list_2="wan_fence"
router_blacklist="wan_blacklist"

# Temporary file we are using to store stage 1 access list
file="/home/$(id -un)/scripts/mtik.tmp"

touch $file
> $file

if [[ ! -d $log_dir ]]; then
  mkdir -p $log_dir
fi

$router_ssh "/ip firewall address-list print where list=$router_list_1; /ip firewall address-list print where list=$router_list_2" | sed '/^Flags/d' | sed '/\#/d' | awk '{print $4}' | sed '/^$/d' | sort -u >> "$file"

while read -r line || [[ -n "$line" ]]
do 

  ip=$(echo $line | tr -d '\r')
  ptr=$(dig @127.0.0.1 -x "$ip" +short 2>&- | sed 's/.$//' | tail -1)

  if [ ! -z "$ptr" ]  
  then
    if echo "$ptr" | egrep -i "(^|[^a-zA-Z])(shodan|stretchoid|shadowserver|ezotech|alphastrike|censys|onyphe|binaryedge|caacbook|onlineprism|internet-census|netsystemsresearch|security|crawler|scan.*)($|[^a-zA-Z])" > /dev/null
    then
        $router_ssh -n "do { /ip firewall address-list add list=$router_blacklist comment=$ptr address=$ip } on-error={}"
        if [[ -f $log_file  ]]; then
          echo -e $(date +%Y-%m-%d) $ip"\t\t"$ptr >> $log_file
        else
          touch $log_file
          echo -e $(date +%Y-%m-%d) $ip"\t\t"$ptr >> $log_file
        fi
    else
        if [[ -f $log_file_other  ]]; then
          echo -e $(date +%Y-%m-%d) $ip "\t\t"$ptr >> $log_file_other
        else
          touch $log_file_other
          echo -e $(date +%Y-%m-%d) $ip "\t\t"$ptr >> $log_file_other
        fi
    fi
  else
    if [[ -f $log_file_empty  ]]; then
      echo -e $(date +%Y-%m-%d) $ip >> $log_file_empty
    else
      touch $log_file_empty
      echo -e $(date +%Y-%m-%d) $ip >> $log_file_empty
    fi
  fi

done < "$file"

rm $file
